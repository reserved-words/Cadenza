trigger:
- main

pool:
  vmImage: windows-latest
  
resources:
  repositories:
  - repository: self

variables:
  BuildConfiguration: 'Release'

stages:
- stage: build
  displayName: 'Build'
  variables:
    - group: appSettings
    
  jobs:
  - job: build
    displayName: 'Build'
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'Publish Apps'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
         **/*.API.csproj
         **/*Service.csproj
         **/Cadenza.csproj
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: false
    - task: FileTransform@2
      displayName: 'File Transform'
      inputs:
        folderPath: '$(build.artifactstagingdirectory)'
        jsonTargetFiles: '**/*appsettings.json'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        condition: succeededOrFailed()  
      
- stage: github
  displayName: 'GitHub'
  variables:
  - group: github
  jobs:
  - job: export
    displayName: 'Push to GitHub'
    steps:
    - template: Templates/github.yml@self