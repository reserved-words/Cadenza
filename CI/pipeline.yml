trigger:
- main

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  
resources:
  repositories:
  - repository: self

variables:
  RestoreBuildProjects: '**/*.csproj'
  TestProjects: '**/*[Tt]ests/*.csproj'
  BuildConfiguration: 'Release'
  SettingsFiles: '**/*appsettings.json'

stages:
- stage: build
  displayName: 'Build'
  variables:
  - group: appSettings
    
  jobs:
  - job: build
    displayName: 'Build'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '$(RestoreBuildProjects)'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '$(RestoreBuildProjects)'
        arguments: '--no-restore --configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: 'Cadenza.Domain/Cadenza.Domain.csproj'
        versioningScheme: 'off'
        
    # - task: DotNetCoreCLI@2
    #   displayName: 'Package Cadenza.Domain'
    #   inputs:
    #     command: pack
    #     projects: 'Cadenza.Domain/Cadenza.Domain.csproj'
    # - task: NuGetCommand@2
    #   displayName: 'Push Cadenza.Domain'
    #   inputs:
    #     command: 'push'
    #     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    #     publishVstsFeed: '12e84f5d-ac38-404d-8917-342d1a6b6267/9576344f-fdaa-4dd0-811d-1ff637c3c3bf'
    #     allowPackageConflicts: true
    - task: DotNetCoreCLI@2
      displayName: 'Publish Apps'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
         **/*.API.csproj
         **/*Service.csproj
         **/Cadenza.csproj
        arguments: '--no-build --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: false
    - task: FileTransform@2
      displayName: 'File Transform'
      inputs:
        xmlTransformationRules: ''
        folderPath: '$(build.artifactstagingdirectory)'
        jsonTargetFiles: '$(SettingsFiles)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: 'Cadenza-drop' 
      condition: succeededOrFailed()
      
- stage: github
  displayName: 'GitHub'
  variables:
  - group: github
  jobs:
  - job: export
    displayName: 'Push to GitHub'
    steps:
    - template: Templates/github.yml@self