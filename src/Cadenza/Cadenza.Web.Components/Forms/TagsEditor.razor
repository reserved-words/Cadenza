
<MudChipSet AllClosable="true" OnClose="OnRemoveTag">
    @foreach (var tag in Model.Tags)
    {
        <MudChip Text="@tag" Size="@Size.Small"></MudChip>
    }
</MudChipSet>

<MudStack Row="true">
@*    <MudTextField MaxLength="100"
                  Label="Add"
                  @bind-Value="NewTagText"
                  For="@(() => NewTagText)"
                  Immediate="true"/>
*@
    <MudFocusTrap DefaultFocus="DefaultFocus">
        <MudTextField MaxLength="100"
                      T="string"
                      Label="Add"
                      For="@(() => NewTagText)"
                      Value="@NewTagText"
                      ValueChanged="@(tag => OnAddTag(tag))" />
    </MudFocusTrap>

@*    <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="OnAddTag" Disabled="IsNewTagTextEmpty"></MudIconButton>*@
</MudStack>

@code {
    [Parameter]
    public TagList Model { get; set; } = new TagList();

    DefaultFocus DefaultFocus { get; set; }

    public async Task OnAddTag(string tag)
    {
        if (string.IsNullOrWhiteSpace(tag))
            return;

        Model.Add(tag);
        NewTagText = "";
        DefaultFocus = DefaultFocus.FirstChild;
    }

    public void OnRemoveTag(MudChip chip)
    {
        Model.Remove(chip.Text);
    }

    public bool IsNewTagTextEmpty => string.IsNullOrWhiteSpace(NewTagText);

    public string NewTagText { get; set; }
}
