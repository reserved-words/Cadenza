@using Cadenza.State.Actions;
@using Cadenza.State.Store;

@inherits FluxorComponent

<MudContainer Class="mx-0 my-2 pa-0">
    <MudText Typo=@Typo.body1>@Title</MudText>
    <MudText Typo=@Typo.body2>@Message</MudText>
    <MudProgressLinear Indeterminate="@Indeterminate"
                       Value="@Progress"
                       Color="@Color" />
</MudContainer>

@code 
{
    [Parameter] public Connector Connector { get; set; }

    private string Title => $"Connecting to {Connector}";

    private TaskState State { get; set; }
    private string Message { get; set; }

    private bool Indeterminate => State == TaskState.Running;

    private int Progress => State == TaskState.Errored
        || State == TaskState.Completed
            ? 100
            : 0;

    private Color Color => State == TaskState.Errored
        ? Color.Error
        : State == TaskState.Completed
        ? Color.Success
        : Color.Info;

    protected override void OnInitialized()
    {
        SubscribeToAction<ApplicationStartupProgressAction>(OnApplicationStartupProgress);
        base.OnInitialized();
    }

    private void OnApplicationStartupProgress(ApplicationStartupProgressAction action)
    {
        if (Connector != action.Connector)
            return;

        State = action.State;
        Message = action.Message;

        StateHasChanged();
    }
}