@foreach (var disc in Model)
{
    <MudCard Class="ma-0 pa-0">
        <MudCardHeader>
            <MudText Typo="@Typo.h6">@disc.DiscName</MudText>
            </MudCardHeader>
            <MudCardContent Class="pa-0 ma-0">
                <AppTable Items="@disc.Tracks">
                    <RowTemplate>
                        <MudTd Class="td-int-input">
                            <MudNumericField MaxLength="3"
                                             HideSpinButtons="true"
                                             @bind-Value="context.DiscNo"
                                             For="@(() => context.DiscNo)" />
                        </MudTd>
                        <MudTd Class="td-int-input">
                            <MudNumericField MaxLength="3"
                                             HideSpinButtons="true"
                                             @bind-Value="context.TrackNo"
                                             For="@(() => context.TrackNo)" />
                        </MudTd>
                        <MudTd>
                            <MudTextField MaxLength="500"
                                          @bind-Value="context.Title"
                                          For="@(() => context.Title)" />
                        </MudTd>
                        <MudTd>
                            <MudText Typo="@Typo.body1">@context.ArtistName</MudText>
                        </MudTd>
                        <MudTd Class="td-icon">
                            <MudIcon Size="@Size.Small"
                                     Icon="@Icons.Material.Filled.Info"
                                     Title="@context.IdFromSource" />
                        </MudTd>
                        <MudTd Class="td-icon">
                            <MudIconButton Size="@Size.Small"
                                           Icon="@Icons.Material.Filled.Delete"
                                           Variant="@Variant.Outlined"
                                           Title="Remove"
                                           OnClick="@(() => OnRemoveTrack(context))">Remove</MudIconButton>
                        </MudTd>    
                    </RowTemplate>
                </AppTable>
            </MudCardContent>
        </MudCard>
}

@code {
    [Parameter] public List<EditableAlbumDisc> Model { get; set; }

    protected IReadOnlyCollection<ReleaseType> ReleaseTypes => Enum.GetValues<ReleaseType>();

    public void OnRemoveTrack(EditableAlbumTrack release)
    {

    }
}