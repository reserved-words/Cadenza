@using Cadenza.Web.Common.Interfaces.Play

<Player Loading="@Loading" 
        Track="@Track" 
        IsLastTrack="@IsLastTrack" />

@code {
    [Inject]
    public IMessenger Messenger { get; set; }

    public bool Loading { get; set; }
    public PlayTrack Track { get; set; }
    public bool IsLastTrack { get; set; }

    protected override void OnInitialized()
    {
        Messenger.Subscribe<PlaylistLoadingEventArgs>(OnPlaylistLoading);
        Messenger.Subscribe<PlaylistFinishedEventArgs>(OnPlaylistFinished);
        Messenger.Subscribe<StartTrackEventArgs>(OnStartTrack);
    }

    private Task OnPlaylistFinished(object sender, PlaylistFinishedEventArgs e)
    {
       // Loading = false;
        //Track = null;
        //StateHasChanged();
        return Task.CompletedTask;
    }

    private Task OnPlaylistLoading(object sender, PlaylistLoadingEventArgs e)
    {
        Loading = true;
        Track = null;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private Task OnStartTrack(object sender, StartTrackEventArgs e)
    {
        Loading = false;
        Track = e.CurrentTrack;
        IsLastTrack = e.IsLastTrack;
        StateHasChanged();
        return Task.CompletedTask;
    }
}
