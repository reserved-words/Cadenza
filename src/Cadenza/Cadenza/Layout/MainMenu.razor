@using Cadenza.Web.Common.Interfaces.Startup

<MudButton StartIcon="@Icons.Material.Filled.History" OnClick="@History" Class="@MenuItemClass(Tab.History)" Size="Size.Large">History</MudButton>
<MudButton OnClick="@CurrentTrack" Class="@MenuItemClass(Tab.CurrentTrack)" Size="Size.Large">
    <CurrentlyPlayingIcon Playing="@IsCurrentlyPlaying" Class="ml-0 mr-3" />
    Playing
</MudButton>
<MudButton StartIcon="@Icons.Material.Filled.LibraryBooks" OnClick="@Library" Class="@MenuItemClass(Tab.Library)" Size="Size.Large">Library</MudButton>
<MudSpacer />
<Search />
<MudMenu Icon="@Icons.Material.Filled.Menu" Variant="Variant.Filled" AnchorOrigin="@Origin.BottomLeft" TransformOrigin="@Origin.TopLeft" Size="Size.Large" Class="cdz-menu">
    <PlayMenu />
</MudMenu>

@code {
    protected override void OnInitialized()
    {
        Messenger.Subscribe<PlayStatusEventArgs>(OnPlayStatusChanged);
        Messenger.Subscribe<ViewItemEventArgs>(OnViewItem);
    }

    [Inject]
    public IMessenger Messenger { get; set; }

    private bool IsCurrentlyPlaying { get; set; }

    private Tab ActiveTab = Tab.History;

    private async Task History()
    {
        await UpdateActiveTab(Tab.History);
    }

    private async Task CurrentTrack()
    {
        await UpdateActiveTab(Tab.CurrentTrack);
    }

    private async Task Library()
    {
        await UpdateActiveTab(Tab.Library);
    }

    private string MenuItemClass(Tab tab)
    {
        return "cdz-menu " + (ActiveTab == tab ? "cdz-menu-active" : "");
    }

    private Task OnPlayStatusChanged(object sender, PlayStatusEventArgs args)
    {
        IsCurrentlyPlaying = args.Status != PlayStatus.Stopped;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private async Task OnViewItem(object sender, ViewItemEventArgs args)
    {
        if (ActiveTab != Tab.Library)
        {
            await UpdateActiveTab(Tab.Library);
        }
    }

    private async Task UpdateActiveTab(Tab tab)
    {
        await Messenger.Send(this, new ViewTabEventArgs(tab));
        ActiveTab = tab;
        StateHasChanged();
    }
}
