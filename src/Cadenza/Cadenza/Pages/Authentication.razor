@page "/authentication/{action}"

@inherits FluxorComponent

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Options
@using Cadenza.Web.State.Actions

@inject NavigationManager Navigation

<RemoteAuthenticatorView Action="@Action">
    <LogOut>
        @{
            Navigation.NavigateTo(LogOutUrl);
        }
    </LogOut>
    <LogOutSucceeded>
        @{
            Navigation.NavigateTo(LogInUrl);
        }
    </LogOutSucceeded>
</RemoteAuthenticatorView>

@code {
    [Inject] public IDispatcher Dispatcher { get; set; }
    [Inject] public IOptions<AuthenticationSettings> AuthSettings { get; set; }

    [Parameter] public string Action { get; set; }

    protected string LogInUrl => "authentication/login";

    protected string LogOutUrl => GetLogOutUrl();

    protected override void OnInitialized()
    {
        SubscribeToAction<ApplicationStartedAction>(OnApplicationStarted);
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        if (Action == "login-callback")
        {
            Dispatcher.Dispatch(new ApplicationStartRequest());
        }
    }

    private void OnApplicationStarted(ApplicationStartedAction action)
    {
        Navigation.NavigateTo("/");
    }

    private string GetLogOutUrl()
    {
        var auth = AuthSettings.Value;
        return $"{auth.Authority}/v2/logout?client_id={auth.ClientId}&returnTo={auth.LogoutRedirect}";
    }
}