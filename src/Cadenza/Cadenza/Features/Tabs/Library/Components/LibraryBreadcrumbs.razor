
<ul class="mud-breadcrumbs mud-typography-body1 py-2">

    <li class="mud-breadcrumb-item">
        <MudLink Typo="@Typo.body1" OnClick="@(() => ViewLibrary())" Color="@Color.Surface">
            Library
        </MudLink>
    </li>

    @foreach (var link in Links)
    {
        <li aria-hidden="true" class="mud-breadcrumb-separator mud-ltr mud-flip-x-rtl">
            <span>/</span>
        </li>
        <li class="mud-breadcrumb-item">
            <MudLink Typo="@Typo.body1" OnClick="@(() => View(link))" Color="@Color.Surface">
                <MudHidden Breakpoint="@Breakpoint.Xs">
                    <span>@link.Name</span>
                </MudHidden>
                <MudHidden Breakpoint="@Breakpoint.Xs" Invert="true">
                    <span>...</span>
                </MudHidden>
            </MudLink>
        </li>
    }

</ul>

@code {
    [Inject] public IDispatcher Dispatcher { get; set; }

    [Parameter] public List<LibraryBreadcrumb> Links { get; set; }

    private void ViewLibrary()
    {
        if (Links.Count == 0)
            return;

        Dispatcher.Dispatch(new ViewItemRequest(PlayerItemType.Library, null, null));
    }

    private void View(LibraryBreadcrumb link)
    {
        if (Links.Last() == link)
            return;

        Dispatcher.Dispatch(new ViewItemRequest(link.Type, link.Id, link.Name));
    }
}
